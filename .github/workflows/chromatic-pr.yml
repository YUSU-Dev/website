# # .github/workflows/chromatic-pr.yml

# name: "Chromatic"

# on:
#   pull_request:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

# jobs:
#   chromatic:
#     name: Run Chromatic
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       - name: Set up Bun
#         uses: oven-sh/setup-bun@v1
#         with:
#           bun-version: latest
#       - name: Install dependencies
#         run: bun install
#       - name: Build package
#         run: bun run build
#       - name: Run Chromatic
#         id: chromatic
#         uses: chromaui/action@latest
#         with:
#           # ⚠️ Make sure to configure a `CHROMATIC_PROJECT_TOKEN` repository secret
#           projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
#           autoAcceptChanges: "main"
#           exitZeroOnChanges: true
#           exitOnceUploaded: true
#           onlyChanged: true
#           skip: "@(renovate/**|dependabot/**)"
#       - name: Publish Summary
#         run: echo -e "| Results |  |\n| --- | --- |\n| Build Results | ${{steps.chromatic.outputs.buildUrl}} |\n| Storybook Preview | ${{steps.chromatic.outputs.storybookUrl}} |\n| Component Count | ${{steps.chromatic.outputs.componentCount}} |" >> $GITHUB_STEP_SUMMARY
#       - name: Update PR
#         uses: actions/github-script@v6
#         id: plan-comment
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           script: |
#             // 1. Retrieve existing bot comments for the PR
#             const { data: comments } = await github.rest.issues.listComments({
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             issue_number: context.issue.number,
#             });
#             const botComment = comments.find(comment => {
#             return comment.user.type === 'Bot' && comment.body.includes('Chromatic Results')
#             });
#             const output = `#### Chromatic Results
#             | Results |  |\n| --- | --- |\n| Build Results | ${{steps.chromatic.outputs.buildUrl}} |\n| Storybook Preview | ${{steps.chromatic.outputs.storybookUrl}} |\n| Component Count | ${{steps.chromatic.outputs.componentCount}} |
#             `;
#             // 3. Delete previous comment so PR timeline makes sense
#             if (botComment) {
#             github.rest.issues.deleteComment({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 comment_id: botComment.id,
#             });
#             }
#             github.rest.issues.createComment({
#             issue_number: context.issue.number,
#             owner: context.repo.owner,
#             repo: context.repo.repo,
#             body: output
#                     });
